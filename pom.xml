<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>xsd2Java</artifactId>
    <version>1.0-SNAPSHOT</version>

    <url>https://www.thecodejournal.tech/2020/12/generating-code-using-maven-xsd-to-java/</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEnconding>UTF-8</project.reporting.outputEnconding>
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
    </properties>

    <!-- if your Maven project is configured for Java 10 or below, then you wont need anything. Thatâ€™s because JAXB was part of JDK -->
    <!--  for Java 11, we will need to add the JAXB dependencies - API and an implementation. -->
    <dependencies>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>3.0.0</version>
        </dependency>
    </dependencies>

    <!-- The plugin expects the schema files to be placed inside src/main/xsd directory. -->
    <!-- When you run mvn clean compile, maven will run the xjc goal during the generate-sources phase and generate the Java classes for the schema. -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <version>2.5.0</version>
                <executions>
                    <execution>
                        <id>xsd-to-java</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <packageName>org.example.xsd2java</packageName>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>